#!/usr/bin/env ruby

require 'drydock'

opts = Drydock::RuntimeOptions.parse!(ARGV)

STDOUT.sync = true
Drydock.logger = Drydock::Logger.new(STDOUT).tap do |l|
  l.level = opts.log_level
  l.formatter = Drydock::Formatter.new
end

build_opts = {event_handler: Drydock::StreamMonitor::SHORT_FORMAT}
build_opts[:cache] = Drydock::ObjectCaches::FilesystemCache.new if opts.cache

Drydock.build(build_opts) do |project|
  Drydock.logger.info Drydock.banner

  filename = ARGV.first || 'Drydockfile'
  filename = "#{filename}/Drydockfile" if File.directory?(filename)

  unless File.exist?(filename)
    Drydock.logger.error "Cannot find file #{filename} in #{Dir.pwd}"
    exit 1
  end

  contents = File.read(filename)
  Drydock.logger.info "Loaded #{contents.length} bytes from #{filename}"

  [contents, filename]
end
